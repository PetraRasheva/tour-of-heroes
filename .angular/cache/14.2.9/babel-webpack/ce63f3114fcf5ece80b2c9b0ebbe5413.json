{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../hero.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\n\nfunction HeroSearchComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const hero_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/detail/\", hero_r2.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", hero_r2.name, \" \");\n  }\n}\n\nexport class HeroSearchComponent {\n  constructor(heroService) {\n    this.heroService = heroService; //A Subject is both a source of observable values and an Observable itself\n\n    this.searchTerms = new Subject();\n  } // Push a search term into the observable stream.\n\n\n  search(term) {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit() {\n    this.heroes$ = this.searchTerms.pipe( // wait 300ms after each keystroke before considering the term\n    debounceTime(300), // ignore new term if same as previous term\n    distinctUntilChanged(),\n    /*'switchMap() preserves the original request order while returning only the observable from the most recent HTTP method call.\n    Results from prior calls are canceled and discarded. */\n    // switch to new search observable each time the term changes\n    switchMap(term => this.heroService.searchHeroes(term)));\n  }\n\n}\n\nHeroSearchComponent.ɵfac = function HeroSearchComponent_Factory(t) {\n  return new (t || HeroSearchComponent)(i0.ɵɵdirectiveInject(i1.HeroService));\n};\n\nHeroSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HeroSearchComponent,\n  selectors: [[\"app-hero-search\"]],\n  decls: 8,\n  vars: 3,\n  consts: [[\"id\", \"search-component\"], [\"for\", \"search-box\"], [\"id\", \"search-box\", 3, \"input\"], [\"searchBox\", \"\"], [1, \"search-result\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"]],\n  template: function HeroSearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Hero Search\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 2, 3);\n      i0.ɵɵlistener(\"input\", function HeroSearchComponent_Template_input_input_3_listener() {\n        i0.ɵɵrestoreView(_r3);\n\n        const _r0 = i0.ɵɵreference(4);\n\n        return i0.ɵɵresetView(ctx.search(_r0.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ul\", 4);\n      i0.ɵɵtemplate(6, HeroSearchComponent_li_6_Template, 3, 2, \"li\", 5);\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(7, 1, ctx.heroes$));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLinkWithHref, i2.AsyncPipe],\n  styles: [\"label[_ngcontent-%COMP%] {\\n    display: block;\\n    font-weight: bold;\\n    font-size: 1.2rem;\\n    margin-top: 1rem;\\n    margin-bottom: .5rem;\\n  \\n  }\\n\\ninput[_ngcontent-%COMP%] {\\n    padding: .5rem;\\n    width: 100%;\\n    max-width: 600px;\\n    box-sizing: border-box;\\n    display: block;\\n  }\\n\\ninput[_ngcontent-%COMP%]:focus {\\n    outline: #336699 auto 1px;\\n  }\\n\\nli[_ngcontent-%COMP%] {\\n    list-style-type: none;\\n  }\\n\\n.search-result[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    border-bottom: 1px solid gray;\\n    border-left: 1px solid gray;\\n    border-right: 1px solid gray;\\n    display: inline-block;\\n    width: 100%;\\n    max-width: 600px;\\n    padding: .5rem;\\n    box-sizing: border-box;\\n    text-decoration: none;\\n    color: black;\\n  }\\n\\n.search-result[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n    background-color: #435A60;\\n    color: white;\\n  }\\n\\nul.search-result[_ngcontent-%COMP%] {\\n    margin-top: 0;\\n    padding-left: 0;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlcm8tc2VhcmNoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOEJBQThCOztBQUU5QjtJQUNJLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQixvQkFBb0I7O0VBRXRCOztBQUNBO0lBQ0UsY0FBYztJQUNkLFdBQVc7SUFDWCxnQkFBZ0I7SUFDaEIsc0JBQXNCO0lBQ3RCLGNBQWM7RUFDaEI7O0FBRUE7SUFDRSx5QkFBeUI7RUFDM0I7O0FBRUE7SUFDRSxxQkFBcUI7RUFDdkI7O0FBQ0E7SUFDRSw2QkFBNkI7SUFDN0IsMkJBQTJCO0lBQzNCLDRCQUE0QjtJQUM1QixxQkFBcUI7SUFDckIsV0FBVztJQUNYLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2Qsc0JBQXNCO0lBQ3RCLHFCQUFxQjtJQUNyQixZQUFZO0VBQ2Q7O0FBRUE7SUFDRSx5QkFBeUI7SUFDekIsWUFBWTtFQUNkOztBQUVBO0lBQ0UsYUFBYTtJQUNiLGVBQWU7RUFDakIiLCJmaWxlIjoiaGVyby1zZWFyY2guY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEhlcm9TZWFyY2ggcHJpdmF0ZSBzdHlsZXMgKi9cblxubGFiZWwge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgIG1hcmdpbi10b3A6IDFyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogLjVyZW07XG4gIFxuICB9XG4gIGlucHV0IHtcbiAgICBwYWRkaW5nOiAuNXJlbTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbiAgXG4gIGlucHV0OmZvY3VzIHtcbiAgICBvdXRsaW5lOiAjMzM2Njk5IGF1dG8gMXB4O1xuICB9XG4gIFxuICBsaSB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICB9XG4gIC5zZWFyY2gtcmVzdWx0IGxpIGEge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBncmF5O1xuICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgZ3JheTtcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCBncmF5O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xuICAgIHBhZGRpbmc6IC41cmVtO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGNvbG9yOiBibGFjaztcbiAgfVxuICBcbiAgLnNlYXJjaC1yZXN1bHQgbGkgYTpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQzNUE2MDtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cbiAgXG4gIHVsLnNlYXJjaC1yZXN1bHQge1xuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICB9Il19 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,OAArB,QAAoC,MAApC;AAEA,SACGC,YADH,EACiBC,oBADjB,EACuCC,SADvC,QAEQ,gBAFR;;;;;;;;ICEMC,2BAA0C,CAA1C,EAA0C,GAA1C,EAA0C,CAA1C;IAEIA;IACFA;;;;;IAFGA;IAAAA;IACDA;IAAAA;;;;ADQV,OAAM,MAAOC,mBAAP,CAA0B;EAM9BC,YAAoBC,WAApB,EAA4C;IAAxB,+BAAwB,CAH5C;;IACQ,mBAAc,IAAIP,OAAJ,EAAd;EAEwC,CANlB,CAQ9B;;;EACAQ,MAAM,CAACC,IAAD,EAAa;IACjB,KAAKC,WAAL,CAAiBC,IAAjB,CAAsBF,IAAtB;EACD;;EAEDG,QAAQ;IACN,KAAKC,OAAL,GAAe,KAAKH,WAAL,CAAiBI,IAAjB,EACb;IACAb,YAAY,CAAC,GAAD,CAFC,EAIb;IACAC,oBAAoB,EALP;IAOb;;IAEA;IACAC,SAAS,CAAEM,IAAD,IAAkB,KAAKF,WAAL,CAAiBQ,YAAjB,CAA8BN,IAA9B,CAAnB,CAVI,CAAf;EAYD;;AA1B6B;;;mBAAnBJ,qBAAmBD;AAAA;;;QAAnBC;EAAmBW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;;MChBhChB,+BAA2B,CAA3B,EAA2B,OAA3B,EAA2B,CAA3B;MAC4BA;MAAWA;MACnCA;MAAkCA;QAAAA;;QAAA;;QAAA,OAASA,qCAAT;MAAgC,CAAhC;MAAlCA;MAEAA;MAEEA;;MAKFA;;;;MALuBA;MAAAA","names":["Subject","debounceTime","distinctUntilChanged","switchMap","i0","HeroSearchComponent","constructor","heroService","search","term","searchTerms","next","ngOnInit","heroes$","pipe","searchHeroes","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/rpetra/Workspace/playground/angular-tour-of-heroes/tour-of-heroes/src/app/hero-search/hero-search.component.ts","/Users/rpetra/Workspace/playground/angular-tour-of-heroes/tour-of-heroes/src/app/hero-search/hero-search.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n   debounceTime, distinctUntilChanged, switchMap\n } from 'rxjs/operators';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-hero-search',\n  templateUrl: './hero-search.component.html',\n  styleUrls: [ './hero-search.component.css' ]\n})\nexport class HeroSearchComponent implements OnInit {\n  heroes$!: Observable<Hero[]>;\n\n  //A Subject is both a source of observable values and an Observable itself\n  private searchTerms = new Subject<string>();\n\n  constructor(private heroService: HeroService) {}\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.heroes$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      /*'switchMap() preserves the original request order while returning only the observable from the most recent HTTP method call. \n      Results from prior calls are canceled and discarded. */\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.heroService.searchHeroes(term)),\n    );\n  }\n}\n","<div id=\"search-component\">\n    <label for=\"search-box\">Hero Search</label>\n    <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\n  \n    <ul class=\"search-result\">\n        \n      <li *ngFor=\"let hero of heroes$ | async\" >\n        <a routerLink=\"/detail/{{hero.id}}\">\n          {{hero.name}}\n        </a>\n      </li>\n    </ul>\n  </div>"]},"metadata":{},"sourceType":"module"}